<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- dataSource -->
    <!--<bean id="dataSource"-->
          <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="url" value="jdbc:mysql://localhost:3306/blog"/>-->
        <!--<property name="username" value="root"/>-->
        <!--<property name="password" value="Zy890924@"/>-->
    <!--</bean>-->

    <!--关于数据库链接，统一使用数据库连接池c3p0，且在spring-shiro中配置后，不用再在spring-dao中配置，其dataSource的bean可在dao层中使用-->

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <!--必须在属性前加jdbc. junit测试时才能通过-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--c3p0连接池的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!--当获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>


    <bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
        <property name="permissionsLookupEnabled" value="true">
        </property>

        <property name="dataSource" ref="dataSource">
        </property>

        <property name="authenticationQuery"
                  value="SELECT password FROM author WHERE username = ?">
        </property>

        <property name="userRolesQuery"
                  value="SELECT role_name from author_role left join role using(role_id)
                  left join author using(author_id) WHERE username = ?">
        </property>

        <property name="permissionsQuery"
                  value="SELECT permission_name FROM role left join
                  permissions using(role_id) WHERE role_name = ?">
        </property>
    </bean>


    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--<property name="successUrl" value="/WEB-INF/jsp/list.jsp"/>-->
        <property name="loginUrl" value="/blog/login"/>
        <!--<property name="unauthorizedUrl" value="/WEB-INF/jsp/list.jsp"/>-->
        <!--<property name="filters">-->
        <!--<map>-->
        <!--<entry key="authc" value-ref="shiro"></entry>-->
        <!--</map>-->
        <!--</property>-->
        <property name="filterChainDefinitions">
            <value>
                /blog/list=anon
                /blog/login=anon
                /blog/articleList=authc
                /blog/ued=authc
                <!--/blog/aboutUs=authc-->
                <!--和<property name="loginUrl" value="/blog/login"/>配合使用，
                当用户没有登录时点击“关于我们”，会自动跳转到登录界面-->
            </value>
        </property>
    </bean>

    <!--<bean id="shiro" class="org.blog.security.shiro.ShiroFilter">-->

    <!--</bean>-->


    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="jdbcRealm"/>

        <property name="cacheManager" ref="shiroCacheManager"/>

    </bean>


    <!--<bean id="shiroRealm" class="org.blog.security.realm.PermissionsRealm"/>-->
    <!--&lt;!&ndash; 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息    &ndash;&gt;-->

    <bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>


    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean
            class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>